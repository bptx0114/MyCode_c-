<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,1]" as_ord="1">open_framegrabber ('DirectShow', 1, 1, 0, 0, 0, 0, 'default', 8, 'gray', -1, 'false', 'default', '[0] FULL HD 1080P Webcam', 0, -1, AcqHandle)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">grab_image_start (AcqHandle, -1)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">while (true)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    grab_image_async (Image, AcqHandle, -1)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    threshold (Image, Regions, 247, 255)</l>
<l>    opening_circle (Regions, RegionOpening, 10)</l>
<l>    fill_up (RegionOpening, RegionFillUp)</l>
<l>    connection (RegionFillUp, ConnectedRegions)</l>
<c>    </c>
<l>    select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 33913.3, 37631.1)</l>
<l>    orientation_region (SelectedRegions, Phi)</l>
<l>    area_center (SelectedRegions, Area, Row, Column)</l>
<l>    vector_angle_to_rigid (Row, Column, Phi, Row, Column, 0, HomMat2D)</l>
<c as_id="measure1d" as_name="Measure 01" as_grp="[1,1]" as_ord="1">    * Measure 01: Code generated by Measure 01</c>
<c as_id="measure1d" as_name="Measure 01" as_grp="[2,1]" as_ord="1">    * Measure 01: Prepare measurement</c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,1]" as_ord="2">    AmplitudeThreshold := 9</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,1]" as_ord="3">    RoiWidthLen2 := 14.5</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,1]" as_ord="4">    set_system ('int_zooming', 'true')</l>
<c as_id="measure1d" as_name="Measure 01" as_grp="[2,2]" as_ord="1">    * Measure 01: Coordinates for line Measure 01 [0]</c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,2]" as_ord="2">    LineRowStart_Measure_01_0 := 312.373</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,2]" as_ord="3">    LineColumnStart_Measure_01_0 := 649.368</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,2]" as_ord="4">    LineRowEnd_Measure_01_0 := 324.155</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,2]" as_ord="5">    LineColumnEnd_Measure_01_0 := 821.35</l>
<c as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="1">    * Measure 01: Convert coordinates to rectangle2 type</c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="2">    TmpCtrl_Row := 0.5*(LineRowStart_Measure_01_0+LineRowEnd_Measure_01_0)</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="3">    TmpCtrl_Column := 0.5*(LineColumnStart_Measure_01_0+LineColumnEnd_Measure_01_0)</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="4">    TmpCtrl_Dr := LineRowStart_Measure_01_0-LineRowEnd_Measure_01_0</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="5">    TmpCtrl_Dc := LineColumnEnd_Measure_01_0-LineColumnStart_Measure_01_0</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="6">    TmpCtrl_Phi := atan2(TmpCtrl_Dr, TmpCtrl_Dc)</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="7">    TmpCtrl_Len1 := 0.5*sqrt(TmpCtrl_Dr*TmpCtrl_Dr + TmpCtrl_Dc*TmpCtrl_Dc)</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="8">    TmpCtrl_Len2 := RoiWidthLen2</l>
<c as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="9">    * Measure 01: Create measure for line Measure 01 [0]</c>
<c as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="10">    * Measure 01: Attention: This assumes all images have the same size!</c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="11">    gen_measure_rectangle2 (TmpCtrl_Row, TmpCtrl_Column, TmpCtrl_Phi, TmpCtrl_Len1, TmpCtrl_Len2, 1280, 720, 'nearest_neighbor', MsrHandle_Measure_01_0)</l>
<c as_id="measure1d" as_name="Measure 01" as_grp="[3,1]" as_ord="1">    * Measure 01: ***************************************************************</c>
<c as_id="measure1d" as_name="Measure 01" as_grp="[3,1]" as_ord="2">    * Measure 01: * The code which follows is to be executed once / measurement *</c>
<c as_id="measure1d" as_name="Measure 01" as_grp="[3,1]" as_ord="3">    * Measure 01: ***************************************************************</c>
<c as_id="measure1d" as_name="Measure 01" as_grp="[3,2]" as_ord="1">    * Measure 01: The image is assumed to be made available in the</c>
<c as_id="measure1d" as_name="Measure 01" as_grp="[3,2]" as_ord="2">    * Measure 01: variable last displayed in the graphics window</c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[3,2]" as_ord="3">    copy_obj (ImageAffinTrans, Image, 1, 1)</l>
<c as_id="measure1d" as_name="Measure 01" as_grp="[4,1]" as_ord="1">    * Measure 01: Execute measurements</c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[4,3]" as_ord="1">    measure_pos (Image, MsrHandle_Measure_01_0, 9.8, 9, 'all', 'all', Row_Measure_01_0, Column_Measure_01_0, Amplitude_Measure_01_0, Distance_Measure_01_0)</l>
<c as_id="measure1d" as_name="Measure 01" as_grp="[4,6]" as_ord="1">    * Measure 01: Do something with the results</c>
<c as_id="measure1d" as_name="Measure 01" as_grp="[5,2]" as_ord="1">    * Measure 01: Clear measure when done</c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[5,2]" as_ord="2">    close_measure (MsrHandle_Measure_01_0)</l>
<l>    affine_trans_image (Image, ImageAffinTrans, HomMat2D, 'constant', 'false')</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endwhile</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[4,1]" as_ord="1">close_framegrabber (AcqHandle)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
